// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * RepoResponse
 * Class for a single Git Repo.
 */
export type RepoResponse = {
    /**
     * Name
     * The repo name.
     */
    name: string;
    /**
     * Url
     * The repo URL.
     */
    url: string;
    /**
     * Description
     * Optional repo description.
     */
    description?: string | null;
    /**
     * Last Commit Message
     */
    last_commit_message?: string | null;
    /**
     * Last Commit Time
     */
    last_commit_time?: string | null;
    /**
     * Last Commit Author
     */
    last_commit_author?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ReadReposApiV1ReposGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/repos/';
};

export type ReadReposApiV1ReposGetResponses = {
    /**
     * Response Read Repos Api V1 Repos  Get
     * Successful Response
     */
    200: Array<RepoResponse>;
};

export type ReadReposApiV1ReposGetResponse = ReadReposApiV1ReposGetResponses[keyof ReadReposApiV1ReposGetResponses];

export type GetRepoApiV1ReposRepoNameGetData = {
    body?: never;
    path: {
        /**
         * Repo Name
         */
        repo_name: string;
    };
    query?: never;
    url: '/api/v1/repos/{repo_name}';
};

export type GetRepoApiV1ReposRepoNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRepoApiV1ReposRepoNameGetError = GetRepoApiV1ReposRepoNameGetErrors[keyof GetRepoApiV1ReposRepoNameGetErrors];

export type GetRepoApiV1ReposRepoNameGetResponses = {
    /**
     * Successful Response
     */
    200: RepoResponse;
};

export type GetRepoApiV1ReposRepoNameGetResponse = GetRepoApiV1ReposRepoNameGetResponses[keyof GetRepoApiV1ReposRepoNameGetResponses];

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: 'http://host.docker.internal:8000' | (string & {});
};